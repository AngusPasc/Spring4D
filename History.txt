2009-12-9
- The utility classes (TEnvironment, TDriveInfo, TOperatingSystem, TFileVersionInfo) and some global functions (ApplicationPath, ApplicationVersion and ApplicationVersionString) were moved to Spring.Utils.pas
- Merged Spring.Tests.Base and Spring.Tests.Core into Spring.Tests
- Added a flexible Base-N Calculator to Spring.Utils
- Introduced a generic Number Generator which locates in Spring.Numbering.
- Added a simple implementation of the INumberSource, which locates in Spring.Numbering.Utils, using ADODB and MSSQLServer (Supports effective Row-Lock).
- Supports the ImplementsAttribute which will tell the IoC Container which service is implemented by the component.

2009-12-1
- Refactoring dependency resolvers
- Added Named/Valued Injections By applying the Injection attribute on members/parameters.
- Removed the deprecated RegisterType methods of the TContainer class.

2009-11-29
- A component can now be registered with several services by the Implements method.

2009-11-27
[Breaking Changes]
- The EnumerateComponents, EnumerateControls, EnumerateDataSet and TrySetFocus methods in Spring.System were moved to Spring.Utils.
- Spring.System.TRtti was moved to Spring.Reflection

[Changes]
- Added TRtti.IsAssignable(typeFrom, typeTo)
- The Spring.Reflection.TxxxFilters classes were introduced to help developers select eligible members easier by applying the Specification Pattern.
- Introduced LINQ-like enumerable extensions (First, FirstOrDefault, Last, LastOrDefault, Where, etc.) which locates in the IEnumerableEx<T>.
- Added a new class helper TRttiType, which provides the ability to filter members (constructors/methods/properties/fields).
- Bug-fixes (TSpecification<T>)

2009-11-22	v0.1.2.566
[IoC]
Added fluent-style registration named as RegisterComponent<T> and RegisterComponent(typeInfo).
Added Build method
Added Typed-Injections
RegisterType overloads are now deprecated.


2009-11-18	v0.1.2.565
[IoC Container]
* Register different components implementation (identified by name) for a service.
* Use TContainer.ResolveAll to resolve all available service implementations.
* Use TContainer.Release to release an instance of a component.
* Added some RegisterType overloads with an activatorDelegate parameter, which is an anonymous method that returns a new instance (also support primitive arguments) insteading of using reflection and injection.
* For those components which implement the IInitializable(or IDisposable) interface, the Initialize (or Dispose) method will be automtically called after the construction (or before the destruction)of an instance.
* Continue refactoring code and test cases.
* Fixed some bugs

2009-11-17	v0.1.2.561
* Reorganized all project folders to make it more clear. Sorry but please update the library path.
--[Spring.Base]
----Bin
----Lib
----Source
----Tests
--[Spring.Core]
----Bin
----Lib
----Source
------IoC
----Tests
* Updated the dependencies and the search folders of the projects.
* Warning free now. (No complier warnings)
* Refactoring some code of IoC.
* Redesigned some IoC test cases.
* Added FastMM494.zip to the "Third Party" folder.
* Removed the incompleted documents.

2009-11-15	v0.1.2.560

<Breaking Changes>:

[Project]
The Delphi Spring Framework has been splited into the following projects:
* Spring.Base.dpk
* Spring.Core.dpk
* Spring.Tests.dpr
The source folders were reorganized. (Base, Core)
Note: Please uninstall the prior version and update the library path.

[Spring.System]
* Redesigned EnumerateControls and EnumerateDataSet. (No predicate overloads)
The callback parameter were renamed from TProc (or TProc<T>) to TFunc<Boolean> (or TFunc<T, Boolean>).
Returning False in the callback will stop the enumeration. Corresponsive live templates were updated.

[Spring.DesignPatterns]
* Renamed all methods of IObservable<T> and the implementation classes.
IObservable<T> = interface
  procedure AddListener(const listener: T);
  procedure RemoveListener(const listener: T);
  procedure NotifyListeners(callback: TProc<T>);
end;

[Live Templates]
enumcp -> EnumerateComponents
argnotnull -> argn (TArgument.CheckNotNull)
argenum -> arge (TArgument.CheckEnum<T>)

<Other Changes>:
[Spring.IOC]
Implemneted an initial light-weight IoC Container which supports:
* Constructor, property, method and even field injection
* Supports different lifetime manager (Singleton/Transient, etc)
* Strongly-Typed interfaces
* Fluent style of Registration and Injection
* Bootstrap
* Check Circular Dependencies

[Next Step]
* Supports primitive arguments.
* Supports Lifecycle interfaces (IInitializable, IStartable, etc)
* Thread safety

[Spring.System]
+Added EnumerateComponents (shortcut: enumcp)
+Added TryParseDateTime and ParseDateTime

[Spring.Collections]
*Moved the adapter classes (e.g. TListAdapter<T>) to Spring.Collections.Adapters

2009-10-27	v0.1.1.558
First Release

2009-10-26	v0.1.0.555
-Removed TPersistentSnapshot and TPersistentHelper
-Removed IValueProvider<T>, TValueProvider<T> and TValueHolder<T>
-Removed IDelegate<T> and TDelegate<T>
*Moved TDriveInfo to Spring.System
*Spring.System.IO and Spring.System.Net were merged into Spring.Utils
*Spring.Dialogs were merged into Spring.Utils
*TContainers (Spring.Collections) are now deprecated, use TCollections instead.

2009-10-24	v0.1.0.542
+Added two TRtti.IsNullReference methods to determine if a variable is a null reference
+Added TSynchronizedObservable<T> (Spring.DesignPatterns) to ensure thread-safety
+More code templates are added to "Code Templates" folder (see "Using Live Templates.txt" in the Documents folder)
*TObservable<T> now inherits from TInterfacedObject, insteading of TInterfaceBase.
*TServiceController and related types are moved from Spring.System to Spring.Utils
*SplitNullTerminatedStrings is now deprecated, use SplitString instead
*TryFocusControl is now deprecated, use TrySetFocus instead
#Bug-Fixes 
	* TContainers.CreateList<T>
-Removed Spring.Logging.Resources (Merged into Spring.Resources)
-Removed TSingletonBase<T>, TRegistry<T> and TClassRegistry classes
-Removed many units and classes (logging, cryptography, validation, etc.) that will be completed in later releases.

2009-10-09	V0.1.0.466
[IMPORTANT]
-Removed the following 4 projects from the roadmap, now just focus on the core fundamental library.
1. Spring Entity Framework
2. Spring Communications Framework
3. Spring ConnectionManager Component
4. Spring Data Form Framework
-Removed Spring.Core, Spring.Core.Objects and Spring.Objects
-Removed Spring.Data.* and Spring.EntityFramework
-Removed Spring.Communications.*

+Added some initial code on IoC Container (Spring.IoC)
+Added TVolatile<T> to implement the volatile keyword in .net (experimental)
+Added TArgument.CheckTypeKind
*Both the parameters "argument" of TArgument.CheckTrue and TArgument.CheckFalse were changed to "msg".
*Updated Copyright headers
*Moved readme_*.txt to Documents folder
*Renamed SpringFramework_2010.* to DelphiSpringFramework_2010.*
*Reorganized subfolders in the Source folder (Need to update the Library path & Browsing path)
*Renamed Spring.Collections.TContainer to TConainers
*Renamed the customized interfaces IEnumerator<T> and IEnumerable<T> in Spring.Collections to IEnumeratorEx<T> and IEnumerableEx<T> to avoid the L817 internal error.
*Redesigned the Singleton Pattern using TSingleton class, which is more like a singleton instances container, insteading of TSingletonBase<T>
*TPersistentSnapshot and TPersistentHelper in Spring.Helpers are now marked as deprecated, and may be removed later.
